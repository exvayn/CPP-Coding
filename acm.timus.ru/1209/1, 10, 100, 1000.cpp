#include <stdio.h>
#include <math.h>
#include <iostream>
// формула суммы n чисел s=(n*(n+1))/2 - n номер текущего эл-та последовательности
// формула последовательности единиц данной задачи k=(n*(n+1))/2+1 - n номер текущей единицы последовательности
// так как
// последовательность s = 3 6 10 15 21
// последовательность k = 4 7 11 16 22
// 
// надо проверить целое ли n. если целое то данный элемент под номером k €вл€етс€ частью последовательности единиц иначе 0
// по формулам k-1=(n(n+1))/2
//             2k-2=n(n+1)
//             -n^2-n+2k-2=0
//             n^2+n-2k+2=0 - конечна€ формула (тут a=1, b=1, c=-2k+2)
//
//  D = b^2-4*a*c = 1-4(-2k+2) = 1+8k-8 = 8k-7
//
// n1=(-b-sqrt(D))/(2*a)   n2=(-b+sqrt(D))/(2*a)
// n1=(-1-sqrt(8k-7)/2 n1=(-1+sqrt(8k-7)/2
// дл€ того что бы n было целое надо чтоб в знаминателе было „≈“Ќќ≈ (ибо делим на 2) и ÷≈Ћќ≈ (ибо логично) число 
// дл€ того чтобы в знаминачеле было четное и целое число надо чтоб sqrt(8k-7) был нечетным (ибо отнимаем или прибовл€ем к нечетному 1 - будет четное) и целым (ибо снова логично)
// Ќќ!!! 8k-7 по любому даст нечетное (ибо 8k - любое k сделает четным, а -7 превратит это четное в нечетное)
// если корень числа целый, то дл€ нечетного числа его корень будет нечетный (sqrt(9)=3; sqrt(25)=5 и тп) отсюда следует что Ќјћ ќ—“ј≈“—я “ќЋ№ ќ ѕ–ќ¬≈–»“№ sqrt(8k-7) Ќј „≈“Ќќ—“№!
//
// можно было все пропустить и проверить n1=(-1-sqrt(8k-7)/2 или n2=(-b+sqrt(D))/(2*a) на целое
// p.s. число k как раз входит в int и float
// Ho 8*k y}I{e HeT
void main(void)
{
	int f,k,n;
	scanf("%d",&n);
	int*A=new int[n];
	for (f=0;f<n;f++) scanf("%d",&A[f]);
	for (f=0;f<n;f++){
		k=A[f];
		if (sqrt((double)8*k-7)==(int)(sqrt((double)8*k-7))) printf("1 ");
		else printf("0 ");
	}
		system("pause");
}

/*
//решение через цикл (timelimit на timus-е)
void main(void)
{
	int i,f,j,k,n;
	scanf("%d",&n);
	int*A=new int[n];
	for (f=0;f<n;f++) scanf("%d",&A[f]);
	for (f=0;f<n;f++){
		k=A[f];
		i=j=1;
		while (i+j<=k && k!=1){
		i=i+j;
		j++;
		}
		if (i==k) printf("1 ");
		else printf("0 ");
	}
	
		system("pause");
}
*/